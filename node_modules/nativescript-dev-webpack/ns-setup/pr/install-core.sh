#!/bin/bash
set -e
#config=$1
path=$1

version=0.0.5
name=functional.tests.core
jar=$name-$version.jar

# export_storage() {
#     if [[ "$PWD" == *release* ]]; then
#         echo "Export Release Storage:" $(date)
#         export STORAGE=/mnt/Distributions/DailyBuilds/NativeScript/functional-tests/Release
#     else
#         echo "Export Master Storage:" $(date)
#         export STORAGE=/mnt/Distributions/DailyBuilds/NativeScript/functional-tests/Stable
#     fi
#     echo $STORAGE
# }

copy_core() {
    echo "Print working directory:" $(date)
    echo $PWD

    if [[ "$PWD" != *functional-tests* ]]; then
        cd functional-tests
        echo $PWD
    fi

	if [[ ! -z $path ]]; then
        echo "Copy functional.tests.core from $path:" $(date)
		cp $path/$jar ./lib/$jar
	elif [[ "$PWD" == *release* ]]; then
        echo "Copy functional.tests.core from Release:" $(date)
        cp /tns-dist/functional-tests-core/Release/$jar ./lib/$jar
    else
        echo "Copy functional.tests.core from Master:" $(date)
        cp /tns-dist/functional-tests-core/Stable/$jar ./lib/$jar
    fi
}

install_core() {
    echo "Install functional.tests.core:" $(date)
    mvn install:install-file -Dfile=lib/$jar -DgroupId=$name -DartifactId=$name -Dversion=$version -Dpackaging=jar
}

# execute_config() {
#     echo "Execute test configuration:" $(date)
#     mvn clean test -P $config
# }

# This is important! :)
cd functional-tests

# export_storage
copy_core
install_core
# execute_config
