# This is a backup file of the famous tns-modules-PR job.

#!/bin/bash

echo "Init: " $(date)
rm -frv ns-setup && git clone git@github.com:NativeScript/ns-setup.git
./ns-setup/ci/clean-folders.sh node_modules functional-tests/android-results functional-tests/ios-results out *.tgz
mkdir out

echo "Build Modules: " $(date)
cd NativeScript
rm -rf bin/dist
npm install
grunt just-build
grunt pack-apps
grunt get-ready-packages
cd ..

echo "Analyze results of modules build: " $(date)
if [ ! -d "NativeScript/bin/dist/tns-core-modules" ]; then
echo "TNS Modules build -> Fail" &&
echo "Hint: check out for typescript errors." &&
exit 1
fi

echo "Get artefacts from local modules build: " $(date)
cp NativeScript/bin/dist/tns-core-modules-*.tgz tns-core-modules.tgz
cp NativeScript/bin/dist/tns-samples-tests-*.tgz tns-samples-tests.tgz
echo "Copy latest stable UnitTestApps: " $(date)
cp /tns-dist/TestApps/Stable/Android/UnitTestApp-release-stable.apk .
cp /tns-dist/TestApps/Stable/iOS/UnitTestApp-stable.tgz .
echo "Extract latest stable UnitTestApps: " $(date)
rm -rf AndroidTestApp && rm -rf UnitTestApp-release-stable && apktool d UnitTestApp-release-stable.apk && mv UnitTestApp-release-stable AndroidTestApp
rm -rf iOSTestApp && mkdir iOSTestApp && tar -xzf UnitTestApp-stable.tgz -C iOSTestApp

echo "Repacakge Android App: " $(date)
rm -rf AndroidTestApp/assets/app/*

# IMPORTANT: Provide a correct application!
rm -rf package && tar -xzf tns-core-modules.tgz && 
mkdir AndroidTestApp/assets/app/tns_modules/ && 
mkdir AndroidTestApp/assets/app/tns_modules/tns-core-modules/ && 
cp -R package/* AndroidTestApp/assets/app/tns_modules/tns-core-modules/

rm -rf package && tar -xzf tns-samples-tests.tgz && cp -R package/* AndroidTestApp/assets/app/
cd AndroidTestApp
find . -name '*.android.js' -exec bash -c 'mv $0 ${0/.android.js/.js}' {} \;
cd ..

## HACK
sed -i '' '/OptionsPanel/d' AndroidTestApp/res/values-v24/styles.xml
sed -i '' '/LockScreen/d' AndroidTestApp/res/values-v24/styles.xml
apktool b AndroidTestApp -o out/UnitTestApp-release.apk

echo "Repacakge iOS App: " $(date)
rm -rf iOSTestApp/TestApp.app/app/*

# IMPORTANT: Provide a correct application!
rm -rf package && tar -xzf tns-core-modules.tgz && 
mkdir iOSTestApp/TestApp.app/app/tns_modules/ &&
mkdir iOSTestApp/TestApp.app/app/tns_modules/tns-core-modules/ &&
cp -R package/* iOSTestApp/TestApp.app/app/tns_modules/tns-core-modules/

rm -rf package && tar -xzf tns-samples-tests.tgz && cp -R package/* iOSTestApp/TestApp.app/app/
cd iOSTestApp
find . -name '*.ios.js' -exec bash -c 'mv $0 ${0/.ios.js/.js}' {} \;
tar -czvf UnitTestApp.tgz TestApp.app
cd ..
mv iOSTestApp/UnitTestApp.tgz out/UnitTestApp.tgz
jarsigner -verbose -keystore ~/keystore/Telerik.keystore -storepass t3l3r1kad -keypass t3l3r1kad out/UnitTestApp-release.apk Telerik

echo "Get Functional Tests" $(date)
[ -d "functional-tests" ] && (cd functional-tests && git reset --hard master && git pull) || (git clone git@github.com:NativeScript/functional-tests.git)
cd functional-tests
rm -rf testapp && mkdir -p testapp
cp ../out/UnitTestApp.tgz ./testapp/UnitTestApp.tgz
cp ../out/UnitTestApp-release.apk ./testapp/UnitTestApp-release.apk
cp /tns-dist/functional-tests-core/Release/functional.tests.core-0.0.5.jar ./lib/functional.tests.core-0.0.5.jar
mvn install:install-file -Dfile=lib/functional.tests.core-0.0.5.jar -DgroupId=functional.tests.core -DartifactId=functional.tests.core -Dversion=0.0.5 -Dpackaging=jar

echo "Run iOS Tests: " $(date)
mvn clean test -P unittests.sim.iphone7.ios100
rm -rf ios-results && cp -R target/surefire-reports ios-results
if (grep -q "runTests passed!" ios-results/logs/log4j.log); then
    echo "iOS tests passed!"
else 
    exit 1
fi

echo "Run Android Tests: " $(date)
mvn clean test -P unittests.emu.default.api23
rm -rf android-results && cp -R target/surefire-reports android-results
if (grep -q "runTests passed!" android-results/logs/log4j.log); then
    echo "Android tests passed!"
else 
    exit 1
fi

echo "End: " $(date)