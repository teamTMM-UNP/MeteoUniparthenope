const path = require("path");
const fs = require("fs");
const child = require("child_process");

const folder = process.argv[process.argv.indexOf("--folder") + 1];
console.log(`Parsed folder: ${folder}`);

const getAllFileNames = (folder) => {
    let files = new Array();
    try {
        fs.readdirSync(path.resolve(folder)).forEach(file => {
            files.push(file);
        });
    } catch (error) {

    }

    return files;
}

const waitNativeScriptVolumeToConnect = (folder, miliseconds = 120000) => {
    const startTime = Date.now();
    let files = getAllFileNames(folder);;

    child.spawnSync('osascript',[`connect-to-shares.scpt`], {
        cwd: __dirname
    });
    while (Date.now() - startTime <= miliseconds && (!files || files.length === 0)) {
        console.log(`Connecting to ${folder} ...`);
        files = getAllFileNames(folder)
    }
    if (files.length > 0) {
        return true;
    }

    return false;
}

const checkSymlinks = (folder) => {
    if (!fs.existsSync(folder)) {
        if (!waitNativeScriptVolumeToConnect(folder)) {
            console.error("Couldn't connect to shares!!!")
            process.exit(1);
        }
    }
    const files = getAllFileNames(folder);
    if (!files || files.length === 0) {
        console.error(`Folder: ${folder} is empty!!!`);
        if (!waitNativeScriptVolumeToConnect(folder)) {
            console.error("Couldn't connect to shares!!!")
            process.exit(1);
        }
    }

    console.log(`Folder: ${folder} contain files`, files);
    process.exit(0);
}

checkSymlinks(folder);